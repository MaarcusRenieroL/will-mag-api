name: Deploy Swing Test App to Hostinger VPS

on:
  push:
    branches:
      - production

jobs:
  deploy:
    name: Build and Deploy with pnpm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm db:generate

      - name: Build project
        run: pnpm build

      - name: Copy necessary files to VPS via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_KEY }}
          source: "dist/**/*,package.json,pnpm-lock.yaml,prisma/**/*,.env.production"
          target: "/root/swing-test-app"
          strip_components: 0

      - name: Restart App on VPS with PM2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            export PATH="$NVM_DIR/versions/node/v20.19.4/bin:$PATH"
            cd /root/swing-test-app
            
            # Install production dependencies
            pnpm install --prod
            
            # Restart or start the application with PM2
            if pm2 list | grep -q "swing-test-app"; then
              pm2 restart swing-test-app
            else
              pm2 start dist/src/index.js --name "swing-test-app" --interpreter node
            fi
            
            # Save PM2 configuration
            pm2 save
            
            # Setup PM2 to start on system boot
            pm2 startup
